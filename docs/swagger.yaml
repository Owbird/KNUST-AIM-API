definitions:
  models.ContactUserData:
    properties:
      alt_personal_mobile:
        type: string
      knust_mobile:
        type: string
      personal_email:
        type: string
      personal_mobile:
        type: string
      postal_address:
        type: string
      residential_address:
        type: string
      school_email:
        type: string
    type: object
  models.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  models.GetResultsResponse:
    properties:
      message:
        type: string
      personal_data:
        $ref: '#/definitions/models.ResultsPersonalData'
      results:
        items:
          $ref: '#/definitions/models.Results'
        type: array
      summary:
        $ref: '#/definitions/models.ResultsSummary'
      trails:
        items:
          type: string
        type: array
    type: object
  models.KNUSTServer:
    properties:
      status:
        type: string
      url:
        type: string
    type: object
  models.KNUSTServerStatusResponse:
    properties:
      message:
        type: string
      servers:
        items:
          $ref: '#/definitions/models.KNUSTServer'
        type: array
    type: object
  models.News:
    properties:
      category:
        type: string
      date:
        type: string
      description:
        type: string
      featured_image:
        type: string
      slug:
        type: string
      title:
        type: string
    type: object
  models.NewsDetails:
    properties:
      content:
        items:
          $ref: '#/definitions/models.NewsDetailsContent'
        type: array
      date:
        type: string
      featured_image:
        type: string
      read_time:
        type: integer
      source:
        type: string
      tile:
        type: string
    type: object
  models.NewsDetailsContent:
    properties:
      type:
        type: string
      value:
        type: string
    type: object
  models.NewsDetailsResponse:
    properties:
      message:
        type: string
      news:
        $ref: '#/definitions/models.NewsDetails'
    type: object
  models.NewsResponse:
    properties:
      message:
        type: string
      news:
        items:
          $ref: '#/definitions/models.News'
        type: array
    type: object
  models.PersonalUserData:
    properties:
      country:
        type: string
      date_of_birth:
        type: string
      gender:
        type: string
      other_names:
        type: string
      region:
        type: string
      religion:
        type: string
      surname:
        type: string
      username:
        type: string
    type: object
  models.ProgrammeUserData:
    properties:
      indexNo:
        type: string
      programme_stream:
        type: string
      studentId:
        type: string
    type: object
  models.Results:
    properties:
      course_code:
        type: string
      course_name:
        type: string
      credits:
        type: string
      grade:
        type: string
      total_mark:
        type: string
    type: object
  models.ResultsPersonalData:
    properties:
      date:
        type: string
      indexNo:
        type: string
      name:
        type: string
      option:
        type: string
      programme:
        type: string
      sem:
        type: string
      studentId:
        type: string
      username:
        type: string
      year:
        type: string
    type: object
  models.ResultsSelection:
    properties:
      sems:
        items:
          type: string
        type: array
      years:
        items:
          type: string
        type: array
    type: object
  models.ResultsSelectionResponse:
    properties:
      message:
        type: string
      results:
        $ref: '#/definitions/models.ResultsSelection'
    type: object
  models.ResultsSummary:
    properties:
      credits_calculated:
        $ref: '#/definitions/models.ResultsSummaryExtra'
      credits_obtained:
        $ref: '#/definitions/models.ResultsSummaryExtra'
      credits_registered:
        $ref: '#/definitions/models.ResultsSummaryExtra'
      cwa:
        $ref: '#/definitions/models.ResultsSummaryExtra'
      weighted_marks:
        $ref: '#/definitions/models.ResultsSummaryExtra'
    type: object
  models.ResultsSummaryExtra:
    properties:
      cumulative:
        type: string
      semester:
        type: string
    type: object
  models.UserAuthPayload:
    properties:
      password:
        type: string
      studentId:
        type: string
      username:
        type: string
    type: object
  models.UserData:
    properties:
      contact:
        $ref: '#/definitions/models.ContactUserData'
      personal:
        $ref: '#/definitions/models.PersonalUserData'
      programme:
        $ref: '#/definitions/models.ProgrammeUserData'
    type: object
  models.UserDataResponse:
    properties:
      message:
        type: string
      user_data:
        $ref: '#/definitions/models.UserData'
    type: object
  models.UserResponse:
    properties:
      message:
        type: string
      token:
        type: string
    type: object
info:
  contact: {}
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates the user based on the credentials and returns a token
        which will be used to authorize requests as a bearer token
      parameters:
      - description: User authentication credentials
        in: body
        name: authPayload
        required: true
        schema:
          $ref: '#/definitions/models.UserAuthPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Authenticate a user
      tags:
      - Auth
  /knust-server-status:
    get:
      description: This checks which of the used KNUST servers are up or down
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.KNUSTServerStatusResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get the status of KNUST servers
      tags:
      - KNUST Servers
  /knust-server-status/badge:
    get:
      description: This sums up the status of the servers and returns a url to an
        SVG badge from shields.io
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get the status of KNUST servers as a badge
      tags:
      - KNUST Servers
  /news:
    get:
      description: Returns the latest news available
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.NewsResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get latest news
      tags:
      - News
  /news/{slug}:
    get:
      consumes:
      - application/json
      description: Get the post details of the news based on the slug
      parameters:
      - description: News slug
        in: path
        name: slug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.NewsDetailsResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get news post details
      tags:
      - News
  /user:
    get:
      description: Returns personal, programme and contact user data
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserDataResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get User Data
      tags:
      - User
  /user/results:
    post:
      consumes:
      - application/json
      description: Returns results for the selected academic year and semester
      parameters:
      - description: Year
        in: body
        name: year
        required: true
        schema:
          type: string
      - description: Sem
        in: body
        name: sem
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetResultsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get results
      tags:
      - Results
  /user/results/selection:
    get:
      description: Returns a list of years and semester that the results are available
        for
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResultsSelectionResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get available results
      tags:
      - Results
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
